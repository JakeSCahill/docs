name: Generate CRD Reference Docs
on:
  workflow_dispatch:  # Allows manual trigger

jobs:
  trigger:
    runs-on: ubuntu-latest
    steps:

      # Get the latest tag
      - name: Get latest tag
        id: latest_tag
        run: echo "LATEST_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      # Checkout the latest tagged version of the redpanda-operator repository
      - name: Checkout redpanda-operator repository
        uses: actions/checkout@v4
        with:
          repository: redpanda-data/redpanda-operator
          ref: ${{ env.LATEST_TAG }}
          path: redpanda
          token: ${{ secrets.ACTIONS_BOT_TOKEN }}

      # Checkout the redpanda-docs repository
      - name: Checkout redpanda-docs repository
        uses: actions/checkout@v4
        with:
          ref: main
          repository: JakeSCahill/docs
          path: redpanda-docs
          token: ${{ secrets.ACTIONS_BOT_TOKEN }}

      # Download crd-ref-docs utility for doc generation
      - name: Download crd-ref-docs
        run: |
          curl -fLO https://github.com/elastic/crd-ref-docs/releases/download/v0.1.0/crd-ref-docs_0.1.0_Linux_x86_64.tar.gz
          tar -xzf crd-ref-docs_0.1.0_Linux_x86_64.tar.gz
          chmod +x crd-ref-docs
          sudo mv crd-ref-docs /usr/local/bin/

      # Generate Operator CRD documentation
      - name: Generate Operator CRD Docs
        run: |
          crd-ref-docs \
            --source-path=./redpanda/operator/api/redpanda/v1alpha2 \
            --max-depth=10 \
            --templates-dir=./redpanda-docs/.github/crd-config/templates/asciidoctor/operator \
            --config=./redpanda-docs/.github/crd-config/config.yaml \
            --renderer=asciidoctor \
            --output-path=./redpanda-docs/modules/reference/pages/k-crd.adoc

      # Check for any changes made in the documentation
      - name: Check if changes were made
        id: check_changes
        run: |
          cd ./redpanda-docs
          changes=$(git status --porcelain)
          if [ -z "$changes" ]; then
            echo "has_changes=false" >> $GITHUB_ENV
          else
            echo "has_changes=true" >> $GITHUB_ENV
          fi

      # If changes were detected, commit and push them
      - name: Commit changes
        if: env.has_changes == 'true'
        run: |
          cd ./redpanda-docs
          git config --global user.email "vbotbuildovich@users.noreply.github.com"
          git config --global user.name "vbotbuildovich"
          git add .
          git commit -m "auto-docs: Update CRD reference doc for ${{ env.LATEST_TAG }}"
          git push origin main
        env:
          ACCESS_TOKEN: ${{ secrets.ACTIONS_BOT_TOKEN }}
