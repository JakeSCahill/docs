name: Generate CRD Reference Docs
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'The tag for which to generate CRD docs'
        required: true
  repository_dispatch:
    types: [generate-crd-docs]
jobs:
  trigger:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      # Determine the operator tag to use.
      - name: Determine operator tag
        id: set_operator_tag
        run: |
          if [ -n "${{ github.event.inputs.tag }}" ]; then
            TAG="${{ github.event.inputs.tag }}"
          else
            TAG="${{ github.ref_name }}"
          fi
          echo "Operator tag: $TAG"
          echo "OPERATOR_TAG=$TAG" >> $GITHUB_ENV

      # Determine which docs branch to use based on the operator tag.
      - name: Determine docs branch
        id: set_docs_branch
        shell: bash
        run: |
          TAG="${OPERATOR_TAG}"
          echo "Operator tag: $TAG"
          
          if [[ "$TAG" == *"v2.3"* ]]; then
            echo "Operator tag contains v2.4 - using docs branch v/24.3."
            if git ls-remote --exit-code --heads https://github.com/JakeSCahill/docs.git v/24.3; then
              DOCS_BRANCH="v/24.3"
            else
              echo "Error: Docs branch v/24.3 not found."
              exit 1
            fi
          else
            # Fetch the latest docs version from the antora.yml file on the main docs branch.
            ANTORA_VERSION=$(curl -s https://raw.githubusercontent.com/redpanda-data/docs/main/antora.yml | grep '^version:' | sed -E 's/version: *//')
            echo "Version in docs main branch: $ANTORA_VERSION"
            # If the operator tag starts with that version, then commit to main.
            if [[ "$TAG" == "v${ANTORA_VERSION}"* ]]; then
              DOCS_BRANCH="main"
            else
              # Derive the docs branch name from the operator tag.
              BASE_VERSION=$(echo "$TAG" | sed -E 's/^v([0-9]+\.[0-9]+).*/\1/')
              DOCS_BRANCH="v/${BASE_VERSION}"
              if ! git ls-remote --exit-code --heads https://github.com/redpanda-data/docs.git "$DOCS_BRANCH"; then
                echo "Error: Docs branch $DOCS_BRANCH not found."
                exit 1
              fi
            fi
          fi

          echo "DOCS_BRANCH=$DOCS_BRANCH" >> $GITHUB_ENV
          echo "Using docs branch: $DOCS_BRANCH"

      # Checkout the operator repository at the specified tag.
      - name: Checkout redpanda operator repository
        uses: actions/checkout@v4
        with:
          repository: redpanda-data/redpanda-operator
          ref: ${{ env.OPERATOR_TAG }}
          path: redpanda
          token: ${{ env.ACTIONS_BOT_TOKEN }}

      # Checkout the docs repository using the determined docs branch.
      - name: Checkout redpanda-docs repository
        uses: actions/checkout@v4
        with:
          repository: JakeSCahill/docs
          ref: ${{ env.DOCS_BRANCH }}
          path: redpanda-docs
          token: ${{ env.ACTIONS_BOT_TOKEN }}

      # Download the crd-ref-docs utility.
      - name: Download crd-ref-docs
        run: |
          curl -fLO https://github.com/elastic/crd-ref-docs/releases/download/v0.1.0/crd-ref-docs_0.1.0_Linux_x86_64.tar.gz
          tar -xzf crd-ref-docs_0.1.0_Linux_x86_64.tar.gz
          chmod +x crd-ref-docs
          sudo mv crd-ref-docs /usr/local/bin/

      # Generate the Operator CRD documentation.
      - name: Generate Operator CRD Docs
        run: |
          crd-ref-docs \
            --source-path=./redpanda/operator/api/redpanda/v1alpha2 \
            --max-depth=10 \
            --templates-dir=./redpanda-docs/.github/crd-config/templates/asciidoctor/operator \
            --config=./redpanda/operator/crd-ref-docs-config.yaml \
            --renderer=asciidoctor \
            --output-path=./redpanda-docs/modules/reference/pages/k-crd.adoc

      # Check for changes in the documentation.
      - name: Check if changes were made
        id: check_changes
        run: |
          cd ./redpanda-docs
          changes=$(git status --porcelain)
          if [ -z "$changes" ]; then
            echo "has_changes=false" >> $GITHUB_ENV
          else
            echo "has_changes=true" >> $GITHUB_ENV
          fi

      # If changes were detected, open a pull request against the determined docs branch.
      - name: Create pull request
        if: env.has_changes == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "auto-docs: Update CRD reference doc for release ${{ env.OPERATOR_TAG }}"
          token: ${{ env.ACTIONS_BOT_TOKEN }}
          path: redpanda-docs
          branch: auto-docs/update-${{ env.OPERATOR_TAG }}
          base: ${{ env.DOCS_BRANCH }}
          title: "auto-docs: Update CRD reference doc for release ${{ env.OPERATOR_TAG }}"
          body: |
            This PR updates the CRD reference documentation for operator release ${{ env.OPERATOR_TAG }}.
          labels: auto-docs
          reviewers: JakeSCahill
